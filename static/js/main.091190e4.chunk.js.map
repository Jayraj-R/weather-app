{"version":3,"sources":["broken-clouds.png","haze-mist-dust.png","rain-thunder-shower.png","Components/WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","height","width","color","paper","position","background","overflow","bgImage","transform","transitions","searchBar","backgroundColor","left","borderRadius","marginTop","themeColor","sorry","padding","top","textShadow","boxShadow","sadFace","fontSize","main","margin","country","extraStats","flex","display","flexDirection","flexWrap","justifyContent","WeatherApp","classes","api","useState","query","setQuery","weather","undefined","setWeather","brokenClouds","setBgImage","Grid","container","className","justify","alignItems","xs","item","sm","Paper","alt","src","TextField","id","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","setTimeout","bg","icon","haze","rain","placeholder","InputProps","startAdornment","InputAdornment","cod","Typography","variant","style","Math","round","temp","name","sys","temp_max","wind","speed","humidity","App","containerjustify","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.091190e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broken-clouds.25e4c9f1.png\";","export default __webpack_public_path__ + \"static/media/haze-mist-dust.6a3a4d29.png\";","export default __webpack_public_path__ + \"static/media/rain-thunder-shower.ad19e07b.png\";","import { Grid, Paper, TextField,InputAdornment, Typography  } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport LocationSearchingOutlinedIcon from '@material-ui/icons/LocationSearchingOutlined';\r\nimport brokenClouds from '../broken-clouds.png'\r\nimport haze from '../haze-mist-dust.png'\r\nimport rain from '../rain-thunder-shower.png'\r\nimport SentimentDissatisfiedSharpIcon from '@material-ui/icons/SentimentDissatisfiedSharp';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height:\"100vh\",\r\n    width:\"100vw\",\r\n    color:\"white\"\r\n  },\r\n  paper:{\r\n    position:\"relative\",\r\n    height:\"600px\",\r\n    background:\"#40e0d0\",\r\n    overflow:\"hidden\",\r\n  },\r\n  bgImage:{\r\n    position:\"absolute\",\r\n    width:\"101%\",\r\n    height:\"101%\",\r\n    transform:\"translateX(-50%)\",\r\n    transitions:\"4s ease-in\"\r\n  },\r\n  searchBar:{\r\n    backgroundColor:\"rgba(255,255,255,0.7)\",\r\n    width:\"80%\",\r\n    height:\"2.5rem\",\r\n    position:\"relative\",\r\n    left:\"50%\",\r\n    transform:\"translateX(-50%)\",\r\n    borderRadius:50,\r\n    marginTop:\"5%\"\r\n  },\r\n  themeColor:{\r\n    color:\"#00ced1\",\r\n  },\r\n  sorry:{\r\n    background:\"rgba(240,240,240,0.4)\",\r\n    padding:\"0.8rem 0.8rem\",\r\n    borderRadius:15,\r\n    position:\"absolute\",\r\n    top:\"12rem\",\r\n    color:\"white\",\r\n    left:\"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    textShadow:\"1px 1px 1px black\",\r\n    boxShadow: \"1px 1px 1px 1px 1px black\",\r\n  },\r\n  sadFace:{\r\n    fontSize:\"3em\"\r\n  },\r\n  textShadow:{\r\n    color:\"white\",\r\n    textShadow:\"0.9px 0.1px 1px black\"\r\n  },\r\n  main:{\r\n    background:\"rgba(240,240,240,0.25)\",\r\n    margin:\"4rem 0rem\",\r\n    padding:\"2rem 0rem\",\r\n    width:\"65%\",\r\n    position:\"relative\",\r\n    left:\"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    borderRadius:\"10px\",\r\n  },\r\n  country:{\r\n    margin:\"-1.8em 0em 1.2em 1.5em\"\r\n  },\r\n  extraStats:{\r\n    background:\"rgba(240,240,240,0.1)\",\r\n    position:\"relative\",\r\n    left:\"50%\",\r\n    transform: \"translateX(-50%)\",\r\n    width:\"85%\",\r\n    padding:\"1em 0.7em\",\r\n    borderRadius:\"10px\",\r\n  },\r\n  flex:{\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    fontSize:18,\r\n    margin:\"0px 0.3rem\",\r\n    flexWrap:\"wrap\",\r\n    justifyContent:\"space-around\"\r\n  }\r\n});\r\n\r\nconst WeatherApp = () => {\r\n  const classes = useStyles();\r\n\r\n  const api = {\r\n      key: \"d5481641df1dcb6ac7c1d01fec572114\",\r\n      base: \"https://api.openweathermap.org/data/2.5/\"\r\n  }\r\n  const [query, setQuery] = useState('')\r\n  const [weather, setWeather] = useState({\r\n    weather:undefined\r\n  })\r\n  const [bgImage, setBgImage] = useState(brokenClouds)\r\n  \r\n  \r\n  const search = evt => {\r\n      if (evt.key === \"Enter\") {\r\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n          .then(res => res.json())\r\n          .then(result => {\r\n            setTimeout(() => {\r\n              setWeather(result); \r\n              setQuery('');\r\n              \r\n              if(result.weather && result.weather[0]){\r\n                const bg=result.weather[0].icon\r\n                if(bg==='02d' || bg==='03d' || bg==='01d' || bg==='02n' || bg==='03n' || bg==='01n')  setBgImage(brokenClouds)\r\n                if(bg==='50n' || bg==='50d') setBgImage(haze)\r\n                if(bg==='04d' || bg==='09d' || bg==='10d' || bg==='11d' || bg==='04n' || bg==='09n' || bg==='10n' || bg==='11n') setBgImage(rain)\r\n              }\r\n            }, 1500);\r\n          });\r\n        \r\n          \r\n        }\r\n      \r\n    }\r\n\r\n  \r\n\r\n  return (\r\n      <Grid container className={classes.root} justify=\"center\" alignItems=\"center\" xs={12}>\r\n        <Grid item xs={11} sm={3}>\r\n          <Paper className={classes.paper}>\r\n            \r\n            {/* BACKGROUND IMAGE */}\r\n            <img alt=\"background\" className={classes.bgImage} src={bgImage}/>\r\n            \r\n            {/* CONTENT */}\r\n            <div>\r\n              <section className={classes.searchBar}>\r\n                <TextField\r\n                  id=\"city\"\r\n                  onChange={e=> setQuery(e.target.value)} \r\n                  value={query} \r\n                  onKeyPress={search}\r\n                  placeholder=\"Search...\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <LocationSearchingOutlinedIcon className={classes.themeColor}/>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </section>\r\n\r\n                {weather.cod===\"404\" \r\n\r\n                    ? (\r\n                      <Grid container item xs={10} className={classes.sorry}>\r\n                        <Grid xs={3}>\r\n                          <SentimentDissatisfiedSharpIcon className={classes.sadFace}/>\r\n                        </Grid>\r\n\r\n                        <Grid xs={9}>\r\n                          <Typography variant=\"p\">\r\n                            <strong>Sorry, the specified city was not found...</strong>\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    ): (\r\n                      weather.main!==undefined &&(<div style={{ position:\"relative\"}}>\r\n\r\n                        <Paper className={`${classes.main} ${classes.textShadow}`}>\r\n                          <Grid container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h2\"> \r\n                              {Math.round(weather.main.temp)}°C\r\n                            </Typography>\r\n                            <Typography  className={classes.themeColor}  variant=\"subtitle1\">\r\n                              {Math.round(weather.main.temp*1.8+32)}°F\r\n                            </Typography>\r\n                          </Grid>\r\n\r\n                          <Grid container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"h5\">\r\n                              {weather.weather[0].main} \r\n                            </Typography>\r\n                          </Grid>\r\n\r\n                          <Grid container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                            <img alt={weather.weather[0].main} src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}/>\r\n                          </Grid>\r\n                        </Paper>\r\n\r\n                        <section>\r\n                          <Grid container xs={12} className={`${classes.textShadow} ${classes.country} `}>\r\n                          <Typography variant=\"h4\">\r\n                            {weather.name}, {weather.sys.country}\r\n                          </Typography> \r\n                          </Grid>\r\n                        </section>\r\n\r\n                        \r\n                        <Grid container xs={11} justify=\"center\" alignItems=\"center\">\r\n                          <Paper  className={`${classes.textShadow} ${classes.extraStats}`}>\r\n                            <Typography variant=\"p\">\r\n                              <div className={classes.flex} style={{flexDirection:\"row\"}}>\r\n                                <div className={classes.flex} >\r\n                                  <span className={classes.themeColor}>Maximum</span>\r\n                                  <span>{weather.main.temp_max}°</span>\r\n                                </div>\r\n                                <div className={classes.flex}>\r\n                                  <span className={classes.themeColor}>Minimum</span>\r\n                                  <span>{weather.main.temp_max}°</span>\r\n                                </div>\r\n                                <div style={{display:\"block\", width:\"100%\",height:\"1em\",}}></div>\r\n                                <div className={classes.flex}>\r\n                                  <span className={classes.themeColor}>Wind</span>\r\n                                  <span>{weather.wind.speed}mph</span>\r\n                                </div>\r\n                                <div className={classes.flex}>\r\n                                  <span className={classes.themeColor}>Humidity</span>\r\n                                  <span>{weather.main.humidity}%</span>\r\n                                </div>\r\n                              </div>\r\n                            </Typography>\r\n                          </Paper>\r\n                        </Grid>                        \r\n                      </div>\r\n                      )\r\n                    )\r\n                }\r\n              </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default WeatherApp","import WeatherApp from './Components/WeatherApp';\nimport './App.css';\nimport { Grid,Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Grid containerjustify=\"center\" alignItems=\"center\" xs={12}>\n          <WeatherApp/>\n        </Grid>\n        <Grid container className=\"source\" justify=\"center\" alignItems=\"center\" xs={12}>\n          <Typography variant=\"subtitle1\">\n            View <a className=\"links\" href=\"https://github.com/Jayraj-R/weather-app\" rel=\"noreferrer\" target=\"_blank\">source code</a>.      \n          </Typography>\n        </Grid>\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}