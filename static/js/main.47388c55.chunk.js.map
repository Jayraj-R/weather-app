{"version":3,"sources":["broken-clouds.png","haze-mist-dust.png","rain-thunder-shower.png","Components/WeatherApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","backgroundImage","height","color","paper","position","background","overflow","bgImage","width","transform","transitions","content","searchBar","backgroundColor","top","left","borderRadius","themeColor","sorry","padding","textShadow","sadFace","fontSize","margin","marginRight","temp","weather","weathers","boxShadow","extraStats","loc","flex","display","flexDirection","WeatherApp","classes","api","useState","query","setQuery","undefined","setWeather","bg","setBg","brokenClouds","bgi","setBgi","Grid","container","className","justify","alignItems","xs","item","sm","Paper","src","TextField","id","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","setTimeout","icon","haze","rain","console","log","placeholder","InputProps","startAdornment","InputAdornment","cod","Typography","variant","main","Math","round","name","sys","country","style","temp_max","wind","speed","humidity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47388c55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broken-clouds.25e4c9f1.png\";","export default __webpack_public_path__ + \"static/media/haze-mist-dust.6a3a4d29.png\";","export default __webpack_public_path__ + \"static/media/rain-thunder-shower.ad19e07b.png\";","import { Grid, Paper, TextField,InputAdornment, Typography  } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport LocationSearchingOutlinedIcon from '@material-ui/icons/LocationSearchingOutlined';\r\nimport brokenClouds from '../broken-clouds.png'\r\nimport haze from '../haze-mist-dust.png'\r\nimport rain from '../rain-thunder-shower.png'\r\nimport SentimentDissatisfiedSharpIcon from '@material-ui/icons/SentimentDissatisfiedSharp';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      backgroundImage: \"linear-gradient(to right, #f78ca0 0%, #f9748f 19%, #fd868c 60%, #fe9a8b 100%)\",\r\n      height:\"100vh\",\r\n      color:\"white\"\r\n    },\r\n    paper:{\r\n      position:\"relative\",\r\n      height:\"80vh\",\r\n      background:\"#40e0d0\",\r\n      overflow:\"hidden\",\r\n    },\r\n    bgImage:{\r\n      position:\"absolute\",\r\n      width:\"101%\",\r\n      height:\"101%\",\r\n      transform:\"translateX(-50%)\",\r\n      transitions:\"4s ease-in\"\r\n    },\r\n    content:{\r\n      position:\"relative\",\r\n    },\r\n    searchBar:{\r\n      backgroundColor:\"rgba(255,255,255,0.7)\",\r\n      width:\"75%\",\r\n      height:\"40px\",\r\n      position:\"relative\",\r\n      top:15,\r\n      left:\"50%\",\r\n      transform:\"translateX(-50%)\",\r\n      borderRadius:50\r\n    },\r\n    themeColor:{\r\n      color:\"#00ced1\"\r\n    },\r\n    sorry:{\r\n      background:\"rgba(240,240,240,0.4)\",\r\n      padding:\"0.8em 0.8em\",\r\n      borderRadius:15,\r\n      position:\"absolute\",\r\n      top:\"12rem\",\r\n      color:\"white\",\r\n      left:\"50%\",\r\n      transform: \"translateX(-50%)\",\r\n      textShadow:\"1px 1px 1px black\",\r\n    },\r\n    sadFace:{\r\n      fontSize:\"3em\",\r\n      position:\"relative\",\r\n      top:\"50%\",\r\n      transform:\"translateY(-30%)\",\r\n      margin:-12,\r\n      marginRight:\"0.1em\"\r\n    },\r\n    temp:{\r\n      color:\"white\",\r\n      textShadow:\"1px 1px 1px black\"\r\n    },\r\n    weather:{\r\n      color:\"white\",\r\n      textShadow:\"1px 1px 10px black\"\r\n    },\r\n    weathers:{\r\n      background:\"rgba(245,245,245,0.3)\",\r\n      position:\"relative\",\r\n      top:\"4rem\",\r\n      left:\"50%\",\r\n      transform: \"translateX(-50%)\",\r\n      padding:\"1em\",\r\n      boxShadow: \"1px 1px 5px\",\r\n      borderRadius:\"10px\",\r\n      width:\"60%\"\r\n    },\r\n    extraStats:{\r\n      color:\"white\",\r\n      background:\"rgba(245,245,245,0.25)\",\r\n      position:\"relative\",\r\n      top:\"7rem\",\r\n      textShadow:\"1px 1px 5px black\",\r\n      borderRadius:\"10px\",\r\n      height:\"8rem\",\r\n      left:\"50%\",\r\n      transform: \"translateX(-50%)\"\r\n    },\r\n    loc:{\r\n      color:\"white\",\r\n      position:\"relative\",\r\n      top:\"6rem\",\r\n      left:\"1rem\",\r\n      textShadow:\"1px 1px 5px black\"\r\n    },\r\n    flex:{\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      fontSize:18,\r\n      margin:\"0px 0.3rem\"\r\n    }\r\n  });\r\n\r\nconst WeatherApp = () => {\r\n    const classes = useStyles();\r\n\r\n    const api = {\r\n        key: \"d5481641df1dcb6ac7c1d01fec572114\",\r\n        base: \"https://api.openweathermap.org/data/2.5/\"\r\n    }\r\n    const [query, setQuery] = useState('')\r\n    const [weather, setWeather] = useState({\r\n      weather:undefined\r\n    })\r\n    const [bg, setBg] = useState('01d')\r\n    const [bgi, setBgi] = useState(brokenClouds)\r\n\r\n    \r\n    const bgHandler = () =>{\r\n      setBg(weather.weather[0].icon)\r\n      if(bg==='02d' || bg==='03d' || bg==='01d' || bg==='02n' || bg==='03n' || bg==='01n')  setBgi(brokenClouds)\r\n      if(bg==='50n' || bg==='50d') setBgi(haze)\r\n      if(bg==='04d' || bg==='09d' || bg==='10d' || bg==='11d' || bg==='04n' || bg==='09n' || bg==='10n' || bg==='11n') setBgi(rain)\r\n    }\r\n    \r\n    const search = evt => {\r\n        if (evt.key === \"Enter\") {\r\n          fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              setTimeout(() => {\r\n                setWeather(result); \r\n                setQuery('');\r\n              }, 2000);\r\n            });\r\n        }\r\n        \r\n        if(typeof weather.weather != \"undefined\"){\r\n          bgHandler()\r\n          console.log(bg, bgi)\r\n        }\r\n      }\r\n\r\n    \r\n\r\n    return (\r\n        <Grid container className={classes.root} justify=\"center\" alignItems=\"center\" xs={12}>\r\n          <Grid item xs={10} sm={3}>\r\n            <Paper className={classes.paper}>\r\n              \r\n              {/* BACKGROUND IMAGE */}\r\n              <img className={classes.bgImage} src={bgi}/>\r\n              \r\n              {/* CONTENT */}\r\n              <div className={classes.content}>\r\n                <div className={classes.searchBar}>\r\n                  <TextField\r\n                    id=\"city\"\r\n                    onChange={e=> setQuery(e.target.value)} \r\n                    value={query} \r\n                    onKeyPress={search}\r\n                    placeholder=\"Search...\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LocationSearchingOutlinedIcon className={classes.themeColor}/>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                  {weather.cod===\"404\" \r\n\r\n                      ? (\r\n                        <Grid container item xs={10} className={classes.sorry}>\r\n                          <Grid xs={3}>\r\n                            <SentimentDissatisfiedSharpIcon className={classes.sadFace}/>\r\n                          </Grid>\r\n\r\n                          <Grid xs={9}>\r\n                            <Typography variant=\"p\">\r\n                              <strong>Sorry, the specified city was not found...</strong>\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      ): (\r\n                        weather.main!==undefined &&(<div>\r\n\r\n                          <section className={classes.weathers}>\r\n                            <Grid className={classes.temp} container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                              <Typography className={classes.temp} variant=\"h2\"> \r\n                                {Math.round(weather.main.temp)}°C\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle1\">\r\n                                {Math.round(weather.main.temp*1.8+32)}°F\r\n                              </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid className={classes.weather} container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                              <Typography variant=\"h6\">\r\n                                {weather.weather[0].main} \r\n                              </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid className={classes.icon} container item xs={12}  justify=\"center\" alignItems=\"center\">\r\n                              <img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}/>\r\n                            </Grid>\r\n                          </section>\r\n\r\n                          <section className={classes.loc}>\r\n                            <Grid container xs={12} className>\r\n                            <Typography variant=\"h4\">\r\n                              {weather.name}, {weather.sys.country}\r\n                            </Typography>\r\n                              \r\n                            </Grid>\r\n                          </section>\r\n\r\n                          <section>\r\n                              <Grid container xs={11} justify=\"center\" alignItems=\"center\" className={classes.extraStats}>\r\n                                <Typography variant=\"p\">\r\n                                  <div className={classes.flex} style={{flexDirection:\"row\"}}>\r\n                                    <div className={classes.flex} >\r\n                                      <strong>Max</strong>\r\n                                      <span>{weather.main.temp_max}°</span>\r\n                                    </div>\r\n                                    <div className={classes.flex}>\r\n                                      <strong>Min</strong>\r\n                                      <span>{weather.main.temp_max}°</span>\r\n                                    </div>\r\n                                    <div className={classes.flex}>\r\n                                      <strong>Wind</strong>\r\n                                      <span>{weather.wind.speed}mph</span>\r\n                                    </div>\r\n                                    <div className={classes.flex}>\r\n                                      <strong>Humidity</strong>\r\n                                      <span>{weather.main.humidity}%</span>\r\n                                    </div>\r\n                                  </div>\r\n                                </Typography>\r\n                              </Grid>\r\n                          </section>\r\n\r\n                            {/* {weather.name} {weather.sys.country} */}\r\n                          \r\n                        </div>\r\n                        )\r\n                      )\r\n                  }\r\n\r\n                </div>\r\n\r\n                \r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n","import WeatherApp from './Components/WeatherApp';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <WeatherApp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}